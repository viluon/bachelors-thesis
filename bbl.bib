@article{emp-study-laziness-r,
	author = {Goel, Aviral and Vitek, Jan},
	title = {On the Design, Implementation, and Use of Laziness in R},
	year = {2019},
	issue_date = {October 2019},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {3},
	number = {OOPSLA},
	url = {https://doi.org/10.1145/3360579},
	doi = {10.1145/3360579},
	abstract = {The R programming language has been lazy for over twenty-five years. This paper presents a review of the design and implementation of call-by-need in R, and a data-driven study of how generations of programmers have put laziness to use in their code. We analyze 16,707 packages and observe the creation of 270.9 B promises. Our data suggests that there is little supporting evidence to assert that programmers use laziness to avoid unnecessary computation or to operate over infinite data structures. For the most part R code appears to have been written without reliance on, and in many cases even knowledge of, delayed argument evaluation. The only significant exception is a small number of packages which leverage call-by-need for meta-programming.},
	journal = {Proc. ACM Program. Lang.},
	month = oct,
	articleno = {153},
	numpages = {27},
	keywords = {R language, delayed or lazy evaluation}
}

@ONLINE{gh-hoed,
	description = {Lighweight algorithmic debugging based on observing intermediate values.},
	title = {GitHub - MaartenFaddegon/Hoed: Hoed - A Lightweight Haskell Tracer and Debugger},
	url = {https://github.com/MaartenFaddegon/Hoed},
	urldate = {2021-03-14}
}

@ONLINE{proj-hat,
	title = {The Haskell Tracer Hat},
	url = {https://archives.haskell.org/projects.haskell.org/hat/},
	urldate = {2021-04-04}
}

@ONLINE{haskell-platform,
	description = {Haskell Platform is a Haskell distribution with batteries included},
	title = {Haskell Platform},
	url = {https://www.haskell.org/platform/},
	urldate = {2021-04-05}
}

@inproceedings{hpc-paper,
	title={Haskell program coverage},
	author={Gill, Andy and Runciman, Colin},
	booktitle={Proceedings of the ACM SIGPLAN workshop on Haskell workshop},
	pages={1--12},
	year={2007}
}

@article{quickcheck-paper,
	title={QuickCheck: a lightweight tool for random testing of Haskell programs},
	author={Claessen, Koen and Hughes, John},
	journal={Acm sigplan notices},
	volume={46},
	number={4},
	pages={53--64},
	year={2011},
	publisher={ACM New York, NY, USA}
}

@inproceedings{stg-classic,
	title={The spineless tagless G-machine},
	author={Peyton Jones, Simon L and Salkild, Jon},
	booktitle={Proceedings of the fourth international conference on Functional programming languages and computer architecture},
	pages={184--201},
	year={1989}
}

@inbook{arch-ghc,
	chapter={The Glasgow Haskell Compiler},
	crossref={arch-oss-apps},
}

@article{arch-oss-apps,
	booktitle={The Architecture of Open Source Applications: Structure, Scale, and a Few More Fearless Hacks},
	volume={II},
	date={May 2012},
	author={Brown, Amy and Wilson, Greg},
	journal={Online at http://aosabook.org}
}

@ONLINE{ghcup,
	description = {The Haskell (GHC) toolchain installer},
	keywords = {Haskell, Haskell programming language, ghc, ghcup},
	title = {ghcup - The Haskell (GHC) toolchain installer},
	url = {https://www.haskell.org/ghcup/},
	urldate = {2021-04-07}
}

@inproceedings{history-of-haskell,
	title={A history of Haskell: being lazy with class},
	author={Hudak, Paul and Hughes, John and Peyton Jones, Simon and Wadler, Philip},
	booktitle={Proceedings of the third ACM SIGPLAN conference on History of programming languages},
	pages={12--1},
	year={2007}
}

@inproceedings{concurrent-haskell,
	title={Concurrent Haskell},
	author={Jones, Simon Peyton and Gordon, Andrew and Finne, Sigbjorn},
	booktitle={POPL},
	volume={96},
	pages={295--308},
	year={1996}
}
